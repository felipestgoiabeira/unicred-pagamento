version: '3.5'

services:
  associateservice:
      build:
        context: ..
        dockerfile: docker/Dockerfile
      command: bash -c "java -jar associate/application.jar --spring.profiles.active=production"
      environment:
        KAFKA_URI: http://kafka:29092
      depends_on:
        - associatedb
      ports:
        - 8080:8080

  ticketservice:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "java -jar ticket/application.jar --spring.profiles.active=production"
    environment:
      KAFKA_URI: http://kafka:29092
    depends_on:
      - ticketdb
    ports:
      - 8081:8081

  filesservice:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    command: bash -c "java -jar files/application.jar --spring.profiles.active=production"
    depends_on:
      - ticketdb
    ports:
      - 8083:8083

  associatedb:
    hostname: associatedb
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: UNICRED_ASSOCIADO
    ports:
      - 5432:5432

  ticketdb:
    hostname: ticketdb
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: UNICRED_BOLETO
    ports:
      - 5435:5432

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1